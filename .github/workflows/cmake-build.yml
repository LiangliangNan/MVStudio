##############################################################################
# GitHub Actions Workflow to test building MVStudio on Windows, Ubuntu, and macOS.
#
# Copyright (C) 2022 Liangliang Nan <liangliang.nan@gmail.com>
#
# Licensed under GNU LGPL.3, see LICENCE file
##############################################################################
name: Test Build MVStudio

on: [push, pull_request]

jobs:
  build:
    name: "Build on ${{ matrix.platform }} - ${{ matrix.build_type }}"
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
        build_type: [Debug, Release]
    runs-on: ${{ matrix.platform }}

    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Install dependencies for each platform
      - name: Install Dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update || true
          sudo apt-get install -y cmake build-essential libgl1-mesa-dev libglu1-mesa-dev \
              mesa-common-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev \
              qtbase5-dev

      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update || true
          brew install cmake qt@5

      # Set up Conda on Windows
      - name: Set up Conda (Windows)
        if: runner.os == 'Windows'
        uses: conda-incubator/setup-miniconda@v3
        with:
          architecture: x64
          activate-environment: MVStudioDev
          auto-activate-base: false
          channels: conda-forge,defaults

      # Install Conda packages on Windows
      - name: Install Dependencies via Conda (Windows)
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: |
          conda install -y \
            ninja \
            dsdale24::qt5 || exit 1

      # Set environment variables for macOS to locate Qt5
      - name: Set Qt5 Environment Variables (macOS)
        if: runner.os == 'macOS'
        run: |
          echo "LDFLAGS=-L/opt/homebrew/opt/qt@5/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/opt/homebrew/opt/qt@5/include" >> $GITHUB_ENV

      # Configure the project
      - name: Configure (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          cmake -S . -B build/${{ matrix.build_type }} -G "Unix Makefiles"

      - name: Configure (Windows)
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: |
          cmake -S . -B build/${{ matrix.build_type }} \
                -G "Visual Studio 17 2022" \
                -A x64 \
                -DCMAKE_PREFIX_PATH="$CONDA_PREFIX/Library"

      # Build the project
      - name: Build (Linux & macOS)
        if: runner.os != 'Windows'
        run: cmake --build build/${{ matrix.build_type }}

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: cmake --build build/${{ matrix.build_type }} --config ${{ matrix.build_type }}